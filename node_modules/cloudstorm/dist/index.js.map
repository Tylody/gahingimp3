{"version":3,"sources":["../src/Constants.ts","../src/BetterWs.ts","../src/Intents.ts","../src/DiscordConnector.ts","../src/Shard.ts","../src/ShardManager.ts","../src/Client.ts","../src/index.ts"],"names":["Constants","resolve","EventEmitter","Intents","OP","LocalBucket"],"mappings":"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","sourcesContent":["\"use strict\";\r\n\r\nconst Constants = {\r\n\tGATEWAY_OP_CODES: {\r\n\r\n\r\n\r\n\t\tDISPATCH: 0 as const,\r\n\r\n\r\n\r\n\t\tHEARTBEAT: 1 as const,\r\n\r\n\r\n\r\n\t\tIDENTIFY: 2 as const,\r\n\r\n\r\n\r\n\t\tPRESENCE_UPDATE: 3 as const,\r\n\r\n\r\n\r\n\t\tVOICE_STATE_UPDATE: 4 as const,\r\n\r\n\r\n\r\n\t\tRESUME: 6 as const,\r\n\r\n\r\n\r\n\t\tRECONNECT: 7 as const,\r\n\r\n\r\n\r\n\t\tREQUEST_GUILD_MEMBERS: 8 as const,\r\n\r\n\r\n\r\n\t\tINVALID_SESSION: 9 as const,\r\n\r\n\r\n\r\n\t\tHELLO: 10 as const,\r\n\r\n\r\n\r\n\t\tHEARTBEAT_ACK: 11 as const\r\n\t},\r\n\tGATEWAY_VERSION: 10 as const\r\n};\r\n\r\nexport = Constants;\r\n","\"use strict\";\r\n\r\n\r\n\r\n\r\n\r\nimport { EventEmitter } from \"events\";\r\nimport { randomBytes, createHash } from \"crypto\";\r\nimport { createInflate, inflateSync, constants } from \"zlib\";\r\nimport https = require(\"https\");\r\nimport http = require(\"http\");\r\nimport util = require(\"util\");\r\nimport { GATEWAY_OP_CODES } from \"./Constants\";\r\n\r\nimport { LocalBucket } from \"snowtransfer\";\r\n\r\nimport type { Socket } from \"net\";\r\n\r\ninterface BWSEvents {\r\n\tws_open: [];\r\n\tws_close: [number, string];\r\n\tws_receive: [any];\r\n\tws_send: [any];\r\n\tdebug: [string];\r\n}\r\n\r\ninterface BetterWs {\r\n\taddListener<E extends keyof BWSEvents>(event: E, listener: (...args: BWSEvents[E]) => any): this;\r\n\temit<E extends keyof BWSEvents>(event: E, ...args: BWSEvents[E]): boolean;\r\n\teventNames(): Array<keyof BWSEvents>;\r\n\tlistenerCount(event: keyof BWSEvents): number;\r\n\tlisteners(event: keyof BWSEvents): Array<(...args: Array<any>) => any>;\r\n\toff<E extends keyof BWSEvents>(event: E, listener: (...args: BWSEvents[E]) => any): this;\r\n\ton<E extends keyof BWSEvents>(event: E, listener: (...args: BWSEvents[E]) => any): this;\r\n\tonce<E extends keyof BWSEvents>(event: E, listener: (...args: BWSEvents[E]) => any): this;\r\n\tprependListener<E extends keyof BWSEvents>(event: E, listener: (...args: BWSEvents[E]) => any): this;\r\n\tprependOnceListener<E extends keyof BWSEvents>(event: E, listener: (...args: BWSEvents[E]) => any): this;\r\n\trawListeners(event: keyof BWSEvents): Array<(...args: Array<any>) => any>;\r\n\tremoveAllListeners(event?: keyof BWSEvents): this;\r\n\tremoveListener<E extends keyof BWSEvents>(event: E, listener: (...args: BWSEvents[E]) => any): this;\r\n}\r\n\r\n\r\n\r\n\r\nclass BetterWs extends EventEmitter {\r\n\r\n\tpublic encoding: \"etf\" | \"json\" | \"other\";\r\n\r\n\tpublic compress: boolean;\r\n\r\n\tpublic wsBucket = new LocalBucket(120, 60000);\r\n\r\n\tpublic presenceBucket = new LocalBucket(5, 60000);\r\n\r\n\r\n\tprivate _socket: Socket | null = null;\r\n\r\n\tpublic _internal: {\r\n\t\topenRejector: ((reason?: any) => void) | null;\r\n\r\n\t\tclosePromise: Promise<void> | null;\r\n\r\n\t\tzlib: import(\"zlib\").Inflate | null;\r\n\t} = {\r\n\t\t\topenRejector: null,\r\n\t\t\tclosePromise: null,\r\n\t\t\tzlib: null\r\n\t\t};\r\n\r\n\tprivate _connecting = false;\r\n\r\n\tprivate _lastCloseCode: number | null = null;\r\n\r\n\tprivate _lastCloseReason: string | null = null;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\tpublic constructor(public address: string, public options: Omit<import(\"./Types\").IClientWSOptions, \"encoding\"> & { encoding?: import(\"./Types\").IClientWSOptions[\"encoding\"] | \"other\" }) {\r\n\t\tsuper();\r\n\r\n\t\tthis.encoding = options.encoding ?? \"other\";\r\n\t\tthis.compress = options.compress ?? false;\r\n\t}\r\n\r\n\r\n\r\n\r\n\tpublic get status(): 1 | 2 | 3 | 4 {\r\n\t\tconst internal = this._internal;\r\n\t\tif (this._connecting) return 2;\r\n\t\tif (internal.closePromise) return 3;\r\n\t\tif (!this._socket) return 4;\r\n\t\treturn 1;\r\n\t}\r\n\r\n\r\n\r\n\r\n\tpublic connect(): Promise<void> {\r\n\t\tif (this._socket || this._connecting) return Promise.resolve(void 0);\r\n\t\tthis._connecting = true;\r\n\t\tconst key = randomBytes(16).toString(\"base64\");\r\n\t\tconst url = new URL(this.address);\r\n\t\tconst useHTTPS = (url.protocol === \"https:\" || url.protocol === \"wss:\") || url.port === \"443\";\r\n\t\tconst port = url.port || (useHTTPS ? \"443\" : \"80\");\r\n\t\tconst req = (useHTTPS ? https : http).request({\r\n\t\t\thostname: url.hostname,\r\n\t\t\tpath: `${url.pathname}${url.search}`,\r\n\t\t\tport: port,\r\n\t\t\theaders: {\r\n\t\t\t\t\"Connection\": \"Upgrade\",\r\n\t\t\t\t\"Upgrade\": \"websocket\",\r\n\t\t\t\t\"Sec-WebSocket-Key\": key,\r\n\t\t\t\t\"Sec-WebSocket-Version\": \"13\",\r\n\t\t\t\t...this.options.headers\r\n\t\t\t}\r\n\t\t});\r\n\t\tlet onErrorRef: ((e: Error) => void) | undefined;\r\n\t\tlet cameFromOnError = false;\r\n\t\treturn new Promise<void>((resolve, reject) => {\r\n\t\t\tthis._internal.openRejector = reject;\r\n\t\t\tconst upgrade = this._onUpgrade.bind(this, key, req, resolve, reject);\r\n\t\t\tonErrorRef = e => {\r\n\t\t\t\tthis._internal.openRejector = null;\r\n\t\t\t\tcameFromOnError = true;\r\n\t\t\t\tthis._connecting = false;\r\n\t\t\t\treq.removeListener(\"upgrade\", upgrade);\r\n\t\t\t\treject(e);\r\n\t\t\t};\r\n\t\t\treq.once(\"upgrade\", upgrade);\r\n\t\t\treq.once(\"error\", onErrorRef);\r\n\t\t\treq.end();\r\n\t\t}).catch(reason => {\r\n\t\t\tif (onErrorRef && !cameFromOnError) {\r\n\t\t\t\treq.destroy();\r\n\t\t\t\treq.removeListener(\"error\", onErrorRef);\r\n\t\t\t\tonErrorRef(reason);\r\n\t\t\t}\r\n\t\t\treturn Promise.reject(reason);\r\n\t\t});\r\n\t}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\tpublic async close(code: number, reason?: string): Promise<void> {\r\n\t\tconst internal = this._internal;\r\n\t\tif (internal.closePromise) return internal.closePromise;\r\n\t\tif (!this._socket) return Promise.resolve(void 0);\r\n\t\tlet resolver: ((value: unknown) => void) | undefined;\r\n\t\tconst promise = new Promise(resolve => {\r\n\t\t\tresolver = resolve;\r\n\t\t\tconst from = Buffer.from([code >> 8, code & 255]);\r\n\t\t\tthis._write(reason ? Buffer.concat([from, Buffer.from(reason)]) : from, 8);\r\n\t\t}).then(() => {\r\n\t\t\tinternal.closePromise = null;\r\n\t\t});\r\n\r\n\t\tpromise.resolve = resolver;\r\n\t\tinternal.closePromise = promise;\r\n\t\treturn promise;\r\n\t}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\tpublic sendMessage(data: any): Promise<void> {\r\n\t\treturn new Promise(res => {\r\n\t\t\tconst presence = data?.op === GATEWAY_OP_CODES.PRESENCE_UPDATE;\r\n\t\t\tconst sendMsg = () => {\r\n\t\t\t\tconst fn = () => {\r\n\t\t\t\t\tthis.emit(\"ws_send\", data);\r\n\t\t\t\t\tif (this.encoding === \"json\") this._write(Buffer.from(JSON.stringify(data)), 1);\r\n\t\t\t\t\telse if (this.encoding === \"etf\") this._write(writeETF(data), 2);\r\n\t\t\t\t\telse if (this.encoding === \"other\") this._write(Buffer.from(data), 2);\r\n\t\t\t\t\tres(void 0);\r\n\t\t\t\t};\r\n\t\t\t\tif (this.options.bypassBuckets) fn();\r\n\t\t\t\telse this.wsBucket.queue(fn);\r\n\t\t\t};\r\n\t\t\tif (presence && !this.options.bypassBuckets) this.presenceBucket.queue(sendMsg);\r\n\t\t\telse sendMsg();\r\n\t\t});\r\n\t}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\tprivate _write(packet: Buffer, opcode: number): void {\r\n\t\tconst socket = this._socket;\r\n\t\tif (!socket?.writable) return;\r\n\t\tconst length = packet.length;\r\n\t\tlet frame: Buffer | undefined;\r\n\t\tif (length < 126) {\r\n\t\t\tframe = Buffer.allocUnsafe(6 + length);\r\n\t\t\tframe[1] = 128 + length;\r\n\t\t} else if (length < (1 << 16)) {\r\n\t\t\tframe = Buffer.allocUnsafe(8 + length);\r\n\t\t\tframe[1] = 254;\r\n\t\t\tframe[2] = length >> 8;\r\n\t\t\tframe[3] = length & 255;\r\n\t\t} else {\r\n\t\t\tframe = Buffer.allocUnsafe(14 + length);\r\n\t\t\tframe[1] = 255;\r\n\t\t\tframe.writeBigUInt64BE(BigInt(length), 2);\r\n\t\t}\r\n\t\tframe[0] = 128 + opcode;\r\n\t\tframe.writeUInt32BE(0, frame.length - length - 4);\r\n\t\tframe.set(packet, frame.length - length);\r\n\t\tsocket.write(frame);\r\n\t}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\tprivate _onUpgrade(key: string, req: http.ClientRequest, resolve: (value: void | PromiseLike<void>) => void, reject: (reason?: any) => void, res: http.IncomingMessage, socket: Socket): void {\r\n\t\tthis._internal.openRejector = null;\r\n\t\tconst hash = createHash(\"sha1\").update(key + \"258EAFA5-E914-47DA-95CA-C5AB0DC85B11\").digest(\"base64\");\r\n\t\tconst accept = res.headers[\"sec-websocket-accept\"];\r\n\t\tif (hash !== accept) {\r\n\t\t\tsocket.end(() => {\r\n\t\t\t\tthis.emit(\"debug\", \"Failed websocket-key validation\");\r\n\t\t\t\tthis._connecting = false;\r\n\t\t\t\treject(new Error(`Invalid Sec-Websocket-Accept | expected: ${hash} | received: ${accept}`));\r\n\t\t\t});\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tsocket.once(\"error\", this._onError.bind(this));\r\n\t\tsocket.once(\"close\", this._onClose.bind(this));\r\n\t\tsocket.on(\"readable\", this._onReadable.bind(this));\r\n\t\tthis._socket = socket;\r\n\t\tthis._connecting = false;\r\n\t\tif (this.compress) {\r\n\t\t\tconst z = createInflate();\r\n\r\n\t\t\tz._c = z.close; z._h = z._handle; z._hc = z._handle.close; z._v = () => void 0;\r\n\t\t\tthis._internal.zlib = z;\r\n\t\t}\r\n\t\tthis.emit(\"ws_open\");\r\n\t\tresolve(void 0);\r\n\t\treq.removeAllListeners(\"error\");\r\n\t}\r\n\r\n\r\n\r\n\r\n\r\n\tprivate _onError(error: Error): void {\r\n\t\tif (!this._socket) return;\r\n\t\tthis.emit(\"debug\", util.inspect(error, true, 1, false));\r\n\t\tthis._write(Buffer.allocUnsafe(0), 8);\r\n\t}\r\n\r\n\r\n\r\n\r\n\tprivate _onClose(): void {\r\n\t\tconst socket = this._socket;\r\n\t\tconst internal = this._internal;\r\n\t\tif (!socket) return;\r\n\t\tsocket.removeListener(\"data\", this._onReadable);\r\n\t\tsocket.removeListener(\"error\", this._onError);\r\n\t\tthis.wsBucket.dropQueue();\r\n\t\tthis.presenceBucket.dropQueue();\r\n\t\tthis._socket = null;\r\n\t\tthis.emit(\"ws_close\", this._lastCloseCode ?? 1006, this._lastCloseReason ?? \"Abnormal Closure\");\r\n\t\tthis._lastCloseCode = null;\r\n\t\tthis._lastCloseReason = null;\r\n\t\tif (internal.zlib) {\r\n\t\t\tinternal.zlib.close();\r\n\t\t\tinternal.zlib = null;\r\n\t\t}\r\n\r\n\t\tif (internal.closePromise) internal.closePromise.resolve(void 0);\r\n\t}\r\n\r\n\r\n\r\n\r\n\tprivate _onReadable(): void {\r\n\t\tconst socket = this._socket;\r\n\t\twhile((socket?.readableLength || 0) > 1) {\r\n\t\t\tlet length = readRange(socket!, 1, 1) & 127;\r\n\t\t\tlet bytes = 0;\r\n\t\t\tif (length > 125) {\r\n\t\t\t\tbytes = length === 126 ? 2 : 8;\r\n\t\t\t\tif (socket!.readableLength < 2 + bytes) return;\r\n\t\t\t\tlength = readRange(socket!, 2, bytes);\r\n\t\t\t}\r\n\t\t\tconst frame = socket!.read(2 + bytes + length) as Buffer;\r\n\t\t\tif (!frame) return;\r\n\t\t\tconst fin = frame[0] >> 7;\r\n\t\t\tconst opcode = frame[0] & 15;\r\n\t\t\tif (fin !== 1 || opcode === 0) this.emit(\"debug\", \"discord actually does send messages with fin=0. if you see this error let me know\");\r\n\t\t\tconst payload = frame.subarray(2 + bytes);\r\n\t\t\tthis._processFrame(opcode, payload);\r\n\t\t}\r\n\t}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\tprivate _processFrame(opcode: number, message: Buffer): void {\r\n\t\tconst internal = this._internal;\r\n\t\tswitch (opcode) {\r\n\t\tcase 1: {\r\n\t\t\tlet packet: any;\r\n\t\t\tif (this.encoding === \"json\") packet = JSON.parse(message.toString());\r\n\t\t\telse if (this.encoding === \"other\") packet = message;\r\n\t\t\tthis.emit(\"ws_receive\", packet);\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tcase 2: {\r\n\t\t\tlet packet;\r\n\t\t\tif (this.compress) {\r\n\t\t\t\tconst z = internal.zlib;\r\n\t\t\t\tlet error = null;\r\n\t\t\t\tlet data = null;\r\n\r\n\t\t\t\tz.close = z._handle.close = z._v;\r\n\t\t\t\ttry {\r\n\r\n\t\t\t\t\tdata = z._processChunk(message, constants.Z_SYNC_FLUSH);\r\n\t\t\t\t} catch(e) {\r\n\t\t\t\t\terror = e;\r\n\t\t\t\t}\r\n\t\t\t\tconst l = message.length;\r\n\t\t\t\tif (message[l - 4] !== 0 || message[l - 3] !== 0 || message[l - 2] !== 255 || message[l - 1] !== 255) this.emit(\"debug\", \"discord actually does send fragmented zlib messages. If you see this error let me know\");\r\n\r\n\t\t\t\tz.close = z._c;\r\n\r\n\t\t\t\tz._handle = z._h;\r\n\r\n\t\t\t\tz._handle.close = z._hc;\r\n\r\n\t\t\t\tz._events.error = void 0;\r\n\r\n\t\t\t\tz._eventCount--;\r\n\t\t\t\tz!.removeAllListeners(\"error\");\r\n\t\t\t\tif (error) {\r\n\t\t\t\t\tthis.emit(\"debug\", \"Zlib error processing chunk\");\r\n\t\t\t\t\tthis._write(Buffer.allocUnsafe(0), 8);\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\tif (!data) {\r\n\t\t\t\t\tthis.emit(\"debug\", \"Data from zlib processing was null. If you see this error let me know\");\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\tif (this.encoding === \"json\") packet = JSON.parse(String(data));\r\n\t\t\t\telse if (this.encoding === \"etf\") packet = readETF(data, 1);\r\n\t\t\t\telse if (this.encoding === \"other\") packet = data;\r\n\t\t\t} else if (this.encoding === \"json\") packet = JSON.parse(inflateSync(message).toString());\r\n\t\t\telse if (this.encoding === \"etf\") packet = readETF(message, 1);\r\n\t\t\telse if (this.encoding === \"other\") packet = message;\r\n\t\t\tthis.emit(\"ws_receive\", packet);\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tcase 8: {\r\n\t\t\tthis._lastCloseCode = message.length > 1 ? (message[0] << 8) + message[1] : 0;\r\n\t\t\tthis._lastCloseReason = message.length > 2 ? message.subarray(2).toString() : \"\";\r\n\t\t\tthis._write(Buffer.from([this._lastCloseCode >> 8, this._lastCloseCode & 255]), 8);\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tcase 9: {\r\n\t\t\tthis._write(message, 10);\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n\r\nfunction readRange(socket: import(\"net\").Socket, index: number, bytes: number): number {\r\n\tlet cursor = 0;\r\n\tlet read = 0;\r\n\tlet num = 0;\r\n\r\n\r\n\tconst readable = socket._readableState;\r\n\tlet currentBufferIndex = readable.bufferIndex;\r\n\tlet currentBuffer = readable.buffer.head ?? readable.buffer[currentBufferIndex];\r\n\r\n\tdo {\r\n\t\tconst data = currentBuffer.data ?? currentBuffer;\r\n\t\tfor (const element of data) {\r\n\t\t\tif (++cursor > index) {\r\n\t\t\t\tnum *= 256;\r\n\t\t\t\tnum += element;\r\n\t\t\t\tif (++read === bytes) return num;\r\n\t\t\t}\r\n\t\t}\r\n\t} while((currentBuffer = (currentBuffer.next ?? readable.buffer[++currentBufferIndex])));\r\n\tthrow new Error(\"readRange failed?\");\r\n}\r\n\r\nfunction readETF(data: Buffer, start: number): Record<any, any> | null | undefined {\r\n\tlet view: DataView | undefined;\r\n\tlet x = start;\r\n\tconst loop = () => {\r\n\t\tconst type = data[x++];\r\n\t\tswitch(type) {\r\n\t\tcase 97: {\r\n\t\t\treturn data[x++];\r\n\t\t}\r\n\t\tcase 98: {\r\n\t\t\tconst int = data.readInt32BE(x);\r\n\t\t\tx += 4;\r\n\t\t\treturn int;\r\n\t\t}\r\n\t\tcase 100: {\r\n\t\t\tconst length = data.readUInt16BE(x);\r\n\t\t\tlet atom = \"\";\r\n\t\t\tif (length > 30) {\r\n\r\n\t\t\t\tatom = data.latin1Slice(x += 2, x + length);\r\n\t\t\t} else {\r\n\t\t\t\tfor (let i = x += 2; i < x + length; i++) {\r\n\t\t\t\t\tatom += String.fromCharCode(data[i]);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tx += length;\r\n\t\t\tif (!atom) return undefined;\r\n\t\t\tif (atom === \"nil\" || atom === \"null\") return null;\r\n\t\t\tif (atom === \"true\") return true;\r\n\t\t\tif (atom === \"false\") return false;\r\n\t\t\treturn atom;\r\n\t\t}\r\n\t\tcase 108: case 106: {\r\n\t\t\tconst array = [] as Array<any>;\r\n\t\t\tif (type === 108) {\r\n\t\t\t\tconst length = data.readUInt32BE(x);\r\n\t\t\t\tx += 4;\r\n\t\t\t\tfor (let i = 0; i < length; i++) {\r\n\t\t\t\t\tarray.push(loop());\r\n\t\t\t\t}\r\n\t\t\t\tx++;\r\n\t\t\t}\r\n\t\t\treturn array;\r\n\t\t}\r\n\t\tcase 107: {\r\n\t\t\tconst array = [] as Array<number>;\r\n\t\t\tconst length = data.readUInt16BE(x);\r\n\t\t\tx += 2;\r\n\t\t\tfor (let i = 0; i < length; i++) {\r\n\t\t\t\tarray.push(data[x++]);\r\n\t\t\t}\r\n\t\t\treturn array;\r\n\t\t}\r\n\t\tcase 109: {\r\n\t\t\tconst length = data.readUInt32BE(x);\r\n\t\t\tlet str = \"\";\r\n\t\t\tif (length > 30) {\r\n\r\n\t\t\t\tstr = data.utf8Slice(x += 4, x + length);\r\n\t\t\t} else {\r\n\t\t\t\tlet i = x += 4;\r\n\t\t\t\tconst l = x + length;\r\n\t\t\t\twhile(i < l) {\r\n\t\t\t\t\tconst byte = data[i++];\r\n\t\t\t\t\tif (byte < 128) str += String.fromCharCode(byte);\r\n\t\t\t\t\telse if (byte < 224) str += String.fromCharCode(((byte & 31) << 6) + (data[i++] & 63));\r\n\t\t\t\t\telse if (byte < 240) str += String.fromCharCode(((byte & 15) << 12) + ((data[i++] & 63) << 6) + (data[i++] & 63));\r\n\t\t\t\t\telse str += String.fromCodePoint(((byte & 7) << 18) + ((data[i++] & 63) << 12) + ((data[i++] & 63) << 6) + (data[i++] & 63));\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tx += length;\r\n\t\t\treturn str;\r\n\t\t}\r\n\t\tcase 110: {\r\n\r\n\t\t\tif (!view) view = new DataView(data.buffer, data.offset, data.byteLength);\r\n\t\t\tconst length = data[x++];\r\n\t\t\tconst sign = data[x++];\r\n\t\t\tlet left = length;\r\n\t\t\tlet num = BigInt(0);\r\n\t\t\twhile(left > 0) {\r\n\t\t\t\tif (left >= 8) {\r\n\t\t\t\t\tnum <<= BigInt(64);\r\n\t\t\t\t\tnum += view.getBigUint64(x + (left -= 8), true);\r\n\t\t\t\t} else if (left >= 4) {\r\n\t\t\t\t\tnum <<= BigInt(32);\r\n\r\n\t\t\t\t\tnum += BigInt(view.getUint32(x + (left -= 4)), true);\r\n\t\t\t\t} else if (left >= 2) {\r\n\t\t\t\t\tnum <<= BigInt(16);\r\n\r\n\t\t\t\t\tnum += BigInt(view.getUint16(x + (left -= 2)), true);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tnum <<= BigInt(8);\r\n\t\t\t\t\tnum += BigInt(data[x]);\r\n\t\t\t\t\tleft--;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tx += length;\r\n\t\t\treturn (sign ? -num : num).toString();\r\n\t\t}\r\n\t\tcase 116: {\r\n\t\t\tconst obj = {};\r\n\t\t\tconst length = data.readUInt32BE(x);\r\n\t\t\tx += 4;\r\n\t\t\tfor(let i = 0; i < length; i++) {\r\n\t\t\t\tconst key = loop();\r\n\r\n\t\t\t\tobj[key] = loop();\r\n\t\t\t}\r\n\t\t\treturn obj;\r\n\t\t}\r\n\t\t}\r\n\t\tthrow new Error(`Missing etf type: ${type}`);\r\n\t};\r\n\treturn loop();\r\n}\r\n\r\nfunction writeETF(data: any): Buffer {\r\n\tconst b = Buffer.allocUnsafe(1 << 12);\r\n\tb[0] = 131;\r\n\tlet i = 1;\r\n\tconst loop = (obj: any) => {\r\n\t\tconst type = typeof obj;\r\n\t\tswitch(type) {\r\n\t\tcase \"boolean\": {\r\n\t\t\tb[i++] = 100;\r\n\t\t\tif (obj) {\r\n\t\t\t\tb.writeUInt16BE(4, i);\r\n\r\n\t\t\t\tb.latin1Write(\"true\", i += 2);\r\n\t\t\t\ti += 4;\r\n\t\t\t} else {\r\n\t\t\t\tb.writeUInt16BE(5, i);\r\n\r\n\t\t\t\tb.latin1Write(\"false\", i += 2);\r\n\t\t\t\ti += 5;\r\n\t\t\t}\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tcase \"string\": {\r\n\t\t\tconst length = Buffer.byteLength(obj);\r\n\t\t\tb[i++] = 109;\r\n\t\t\tb.writeUInt32BE(length, i);\r\n\r\n\t\t\tb.utf8Write(obj, i += 4);\r\n\t\t\ti += length;\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tcase \"number\": {\r\n\t\t\tif (Number.isInteger(obj)) {\r\n\t\t\t\tconst abs = Math.abs(obj);\r\n\t\t\t\tif (abs < 2147483648) {\r\n\t\t\t\t\tb[i++] = 98;\r\n\t\t\t\t\tb.writeInt32BE(obj, i);\r\n\t\t\t\t\ti += 4;\r\n\t\t\t\t} else if (abs < Number.MAX_SAFE_INTEGER) {\r\n\t\t\t\t\tb[i++] = 110;\r\n\t\t\t\t\tb[i++] = 8;\r\n\t\t\t\t\tb[i++] = Number(obj < 0);\r\n\t\t\t\t\tb.writeBigUInt64LE(BigInt(abs), i);\r\n\t\t\t\t\ti += 8;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tb[i++] = 70;\r\n\t\t\t\t\tb.writeDoubleBE(obj, i);\r\n\t\t\t\t\ti += 8;\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tb[i++] = 70;\r\n\t\t\t\tb.writeDoubleBE(obj, i);\r\n\t\t\t\ti += 8;\r\n\t\t\t}\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tcase \"bigint\": {\r\n\t\t\tb[i++] = 110;\r\n\t\t\tb[i++] = 8;\r\n\t\t\tb[i++] = Number(obj < 0);\r\n\t\t\tb.writeBigUInt64LE(obj, i);\r\n\t\t\ti += 8;\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tcase \"object\": {\r\n\t\t\tif (obj === null) {\r\n\t\t\t\tb[i++] = 100;\r\n\t\t\t\tb.writeUInt16BE(3, i);\r\n\r\n\t\t\t\tb.latin1Write(\"nil\", i += 2);\r\n\t\t\t\ti += 3;\r\n\t\t\t} else if (Array.isArray(obj)) {\r\n\t\t\t\tif (obj.length) {\r\n\t\t\t\t\tb[i++] = 108;\r\n\t\t\t\t\tb.writeUInt32BE(obj.length, i);\r\n\t\t\t\t\ti += 4;\r\n\t\t\t\t\tfor (const item of obj) {\r\n\t\t\t\t\t\tloop(item);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tb[i++] = 106;\r\n\t\t\t} else {\r\n\t\t\t\tconst entries = Object.entries(obj).filter(x => typeof x[1] !== \"undefined\");\r\n\t\t\t\tb[i++] = 116;\r\n\t\t\t\tb.writeUInt32BE(entries.length, i);\r\n\t\t\t\ti += 4;\r\n\t\t\t\tfor(const [key, value] of entries) {\r\n\t\t\t\t\tloop(key);\r\n\t\t\t\t\tloop(value);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\t}\r\n\t};\r\n\tloop(data);\r\n\treturn Buffer.from(b.subarray(0, i));\r\n}\r\n\r\n\r\nexport = BetterWs;\r\n","\"use strict\";\r\n\r\nexport type IntentFlags = typeof flags;\r\nexport type IntentResolvable = number | Array<number> | keyof IntentFlags | Array<keyof IntentFlags>;\r\n\r\n\r\n\r\n\r\nexport const flags = {\r\n\tGUILDS: 1 << 0,\r\n\tGUILD_MEMBERS: 1 << 1,\r\n\tGUILD_MODERATION: 1 << 2,\r\n\tGUILD_EMOJIS_AND_STICKERS: 1 << 3,\r\n\tGUILD_INTEGRATIONS: 1 << 4,\r\n\tGUILD_WEBHOOKS: 1 << 5,\r\n\tGUILD_INVITES: 1 << 6,\r\n\tGUILD_VOICE_STATES: 1 << 7,\r\n\tGUILD_PRESENCES: 1 << 8,\r\n\tGUILD_MESSAGES: 1 << 9,\r\n\tGUILD_MESSAGE_REACTIONS: 1 << 10,\r\n\tGUILD_MESSAGE_TYPING: 1 << 11,\r\n\tDIRECT_MESSAGES: 1 << 12,\r\n\tDIRECT_MESSAGE_REACTIONS: 1 << 13,\r\n\tDIRECT_MESSAGE_TYPING: 1 << 14,\r\n\tMESSAGE_CONTENT: 1 << 15,\r\n\tGUILD_SCHEDULED_EVENTS: 1 << 16,\r\n\tAUTO_MODERATION_CONFIGURATION: 1 << 20,\r\n\tAUTO_MODERATION_EXECUTION: 1 << 21\r\n};\r\n\r\n\r\nexport const privileged = flags.GUILD_MEMBERS | flags.GUILD_PRESENCES | flags.MESSAGE_CONTENT;\r\n\r\nexport const all = Object.values(flags).reduce((acc, p) => acc | p, 0);\r\n\r\nexport const non_privileged = all & ~privileged;\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport function resolve(bit: IntentResolvable = 0): number {\r\n\tif (typeof bit === \"number\" && bit >= 0) return bit;\r\n\tif (typeof bit === \"string\" && flags[bit]) return flags[bit] | 0;\r\n\tif (Array.isArray(bit)) return bit.map((p: IntentResolvable) => resolve(p)).reduce((prev, p) => prev | p, 0);\r\n\tthrow new RangeError(\"BITFIELD_INVALID\");\r\n}\r\n\r\nexport default { flags, privileged, all, non_privileged, resolve };\r\n","\"use strict\";\r\n\r\nimport { EventEmitter } from \"events\";\r\nimport BetterWs = require(\"./BetterWs\");\r\nimport { GATEWAY_OP_CODES as OP, GATEWAY_VERSION } from \"./Constants\";\r\nimport Intents = require(\"./Intents\");\r\n\r\nimport type {\r\n\tGatewayReceivePayload,\r\n\tGatewayIdentify,\r\n\tGatewayPresenceUpdateData,\r\n\tGatewayVoiceStateUpdateData,\r\n\tGatewayRequestGuildMembersData,\r\n\tGatewayRequestGuildMembersDataWithQuery,\r\n\tGatewayRequestGuildMembersDataWithUserIds\r\n} from \"discord-api-types/v10\";\r\n\r\nimport { PresenceUpdateStatus } from \"discord-api-types/v10\";\r\n\r\ninterface ConnectorEvents {\r\n\tqueueIdentify: [number];\r\n\tready: [boolean];\r\n\tdisconnect: [number, string, boolean];\r\n\tstateChange: [\"connecting\" | \"identifying\" | \"resuming\" | \"ready\" | \"disconnected\"]\r\n}\r\n\r\ninterface DiscordConnector {\r\n\taddListener<E extends keyof ConnectorEvents>(event: E, listener: (...args: ConnectorEvents[E]) => any): this;\r\n\temit<E extends keyof ConnectorEvents>(event: E, ...args: ConnectorEvents[E]): boolean;\r\n\teventNames(): Array<keyof ConnectorEvents>;\r\n\tlistenerCount(event: keyof ConnectorEvents): number;\r\n\tlisteners(event: keyof ConnectorEvents): Array<(...args: Array<any>) => any>;\r\n\toff<E extends keyof ConnectorEvents>(event: E, listener: (...args: ConnectorEvents[E]) => any): this;\r\n\ton<E extends keyof ConnectorEvents>(event: E, listener: (...args: ConnectorEvents[E]) => any): this;\r\n\tonce<E extends keyof ConnectorEvents>(event: E, listener: (...args: ConnectorEvents[E]) => any): this;\r\n\tprependListener<E extends keyof ConnectorEvents>(event: E, listener: (...args: ConnectorEvents[E]) => any): this;\r\n\tprependOnceListener<E extends keyof ConnectorEvents>(event: E, listener: (...args: ConnectorEvents[E]) => any): this;\r\n\trawListeners(event: keyof ConnectorEvents): Array<(...args: Array<any>) => any>;\r\n\tremoveAllListeners(event?: keyof ConnectorEvents): this;\r\n\tremoveListener<E extends keyof ConnectorEvents>(event: E, listener: (...args: ConnectorEvents[E]) => any): this;\r\n}\r\n\r\nconst resumableCodes = [4008, 4005, 4003, 4002, 4001, 4000, 1006, 1001];\r\nconst shouldntAttemptReconnectCodes = [4014, 4013, 4012, 4011, 4010, 4004];\r\nconst disconnectMessages = {\r\n\t4014: \"Disallowed Intents, check your client options and application page.\",\r\n\t4013: \"Invalid Intents data, check your client options.\",\r\n\t4012: \"Invalid API version.\",\r\n\t4011: \"Shard would be on over 2500 guilds. Add more shards.\",\r\n\t4010: \"Invalid sharding data, check your client options.\",\r\n\t4009: \"Session timed out.\",\r\n\t4008: \"You are being rate limited. Wait before sending more packets.\",\r\n\t4007: \"Invalid sequence. Reconnecting and starting a new session.\",\r\n\t4005: \"You sent more than one OP 2 IDENTIFY payload while the websocket was open.\",\r\n\t4004: \"Tried to connect with an invalid token.\",\r\n\t4003: \"You tried to send a packet before sending an OP 2 IDENTIFY or OP 6 RESUME.\",\r\n\t4002: \"You sent an invalid payload.\",\r\n\t4001: \"You sent an invalid opcode or invalid payload for an opcode.\"\r\n};\r\n\r\nconst connectionError = new Error(\"WS took too long to connect. Is your internet okay?\");\r\n\r\nconst wsStatusTypes = [\"Whatever 0 is. Report if you see this\", \"connected\", \"connecting\", \"closing\", \"closed\"];\r\n\r\n\r\n\r\n\r\n\r\n\r\nclass DiscordConnector extends EventEmitter {\r\n\r\n\tpublic options: DiscordConnector[\"client\"][\"options\"];\r\n\r\n\tpublic reconnect: boolean;\r\n\r\n\tpublic betterWs: BetterWs;\r\n\r\n\tpublic heartbeatTimeout: NodeJS.Timeout | null = null;\r\n\r\n\tpublic heartbeatInterval = 0;\r\n\r\n\tpublic _trace: string | null = null;\r\n\r\n\tpublic seq = 0;\r\n\r\n\tpublic status: \"connecting\" | \"identifying\" | \"resuming\" | \"ready\" | \"disconnected\" = \"disconnected\";\r\n\r\n\tpublic sessionId: string | null = null;\r\n\r\n\tpublic lastACKAt = 0;\r\n\r\n\tpublic lastHeartbeatSend = 0;\r\n\r\n\tpublic latency = 0;\r\n\r\n\tpublic identifyAddress: string;\r\n\r\n\tpublic resumeAddress: string | null = null;\r\n\r\n\tpublic reconnecting = false;\r\n\r\n\r\n\tprivate _closing = false;\r\n\r\n\tprivate _closeCalled = false;\r\n\r\n\tprivate _openToHeartbeatTimeout: NodeJS.Timeout | null = null;\r\n\r\n\tprivate _initialHeartbeatTimeout: NodeJS.Timeout | null = null;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\tpublic constructor(public id: number, public client: EventEmitter & { options: Omit<import(\"./Types\").IClientOptions, \"snowtransferInstance\"> & { token: string; endpoint?: string; } }) {\r\n\t\tsuper();\r\n\r\n\t\tthis.options = client.options;\r\n\t\tthis.reconnect = this.options.reconnect ?? true;\r\n\t\tthis.identifyAddress = this.options.endpoint!;\r\n\r\n\t\tthis.betterWs = new BetterWs(this.identifyAddress, this.options.ws!);\r\n\r\n\t\tthis.betterWs.on(\"ws_open\", () => {\r\n\t\t\tthis.status = \"connecting\";\r\n\t\t\tthis.emit(\"stateChange\", \"connecting\");\r\n\t\t\tthis.reconnecting = false;\r\n\t\t\tthis._openToHeartbeatTimeout = setTimeout(() => {\r\n\t\t\t\tthis.client.emit(\"debug\", `Shard ${this.id} didn't receive a HELLO after the ws was opened in time`);\r\n\t\t\t\tthis._reconnect(true);\r\n\t\t\t}, 10000);\r\n\t\t});\r\n\t\tthis.betterWs.on(\"ws_receive\", msg => this.messageAction(msg));\r\n\t\tthis.betterWs.on<\"ws_close\">(\"ws_close\", (code, reason) => this.handleWsClose(code, reason));\r\n\t\tthis.betterWs.on(\"debug\", event => this.client.emit(\"error\", event));\r\n\t\tthis.betterWs.on(\"ws_send\", data => this.client.emit(\"rawSend\", data));\r\n\t}\r\n\r\n\r\n\r\n\r\n\tpublic async connect(): Promise<void> {\r\n\t\tthis._closing = false;\r\n\t\tthis._closeCalled = false;\r\n\t\tthis.client.emit(\"debug\", `Shard ${this.id} connecting to gateway`);\r\n\r\n\t\treturn this.betterWs.connect()\r\n\t\t\t.catch(e => {\r\n\t\t\t\tif (e === connectionError) return;\r\n\t\t\t\tsetTimeout(() => {\r\n\t\t\t\t\tif (!this._closeCalled) this.connect();\r\n\t\t\t\t}, 5000);\r\n\t\t\t});\r\n\t}\r\n\r\n\r\n\r\n\r\n\tpublic async disconnect(): Promise<void> {\r\n\t\tthis._closing = true;\r\n\t\tthis._closeCalled = true;\r\n\t\treturn this.betterWs.close(1000, \"Disconnected by User\");\r\n\t}\r\n\r\n\r\n\r\n\r\n\r\n\tprivate async messageAction(message: GatewayReceivePayload): Promise<void> {\r\n\t\tthis.client.emit(\"rawReceive\", message);\r\n\t\tconst withShardID: import(\"./Types\").IGatewayMessage = Object.assign(message, { shard_id: this.id });\r\n\t\tthis.client.emit(\"event\", withShardID);\r\n\r\n\t\tswitch (withShardID.op) {\r\n\t\tcase OP.DISPATCH:\r\n\t\t\tthis.handleDispatch(withShardID);\r\n\t\t\tbreak;\r\n\r\n\t\tcase OP.HEARTBEAT:\r\n\t\t\tthis.heartbeat();\r\n\t\t\tbreak;\r\n\r\n\t\tcase OP.RECONNECT:\r\n\t\t\tthis.client.emit(\"debug\", `Gateway asked shard ${this.id} to reconnect`);\r\n\t\t\tif (this.reconnect) this._reconnect(true);\r\n\t\t\telse this.disconnect();\r\n\t\t\tbreak;\r\n\r\n\t\tcase OP.INVALID_SESSION:\r\n\t\t\tthis.client.emit(\"debug\", `Shard ${this.id}'s session was invalidated`);\r\n\t\t\tif (withShardID.d && this.sessionId) this.resume();\r\n\t\t\telse {\r\n\t\t\t\tthis.seq = 0;\r\n\t\t\t\tthis.sessionId = \"\";\r\n\t\t\t\tthis.emit(\"queueIdentify\", this.id);\r\n\t\t\t}\r\n\t\t\tbreak;\r\n\r\n\t\tcase OP.HELLO:\r\n\t\t\tif (this._openToHeartbeatTimeout) clearTimeout(this._openToHeartbeatTimeout);\r\n\t\t\tthis.client.emit(\"debug\", `Shard ${this.id} received HELLO`);\r\n\t\t\tthis.lastACKAt = Date.now();\r\n\t\t\tthis.heartbeatInterval = withShardID.d.heartbeat_interval;\r\n\t\t\tthis._initialHeartbeatTimeout = setTimeout(() => this.heartbeat(), this.heartbeatInterval * Math.random());\r\n\t\t\tthis._trace = (withShardID.d as unknown as { _trace: string })._trace;\r\n\t\t\tthis._onHello();\r\n\t\t\tbreak;\r\n\r\n\t\tcase OP.HEARTBEAT_ACK:\r\n\t\t\tthis.lastACKAt = Date.now();\r\n\t\t\tthis.latency = this.lastACKAt - this.lastHeartbeatSend;\r\n\t\t\tbreak;\r\n\r\n\t\tdefault:\r\n\t\t\tvoid 0;\r\n\t\t}\r\n\t}\r\n\r\n\r\n\r\n\r\n\r\n\tprivate async _reconnect(resume = false): Promise<void> {\r\n\t\tthis.betterWs._internal.openRejector?.(connectionError);\r\n\t\tthis.reconnecting = resume;\r\n\t\tawait this.betterWs.close(resume ? 4000 : 1012, \"reconnecting\");\r\n\t\tif (resume) {\r\n\t\t\tthis.clearHeartBeat();\r\n\t\t\tif (this.resumeAddress) this.betterWs.address = this.resumeAddress;\r\n\t\t\telse this.betterWs.address = this.identifyAddress;\r\n\t\t} else {\r\n\t\t\tthis.reset();\r\n\t\t\tthis.betterWs.address = this.identifyAddress;\r\n\t\t}\r\n\t\tthis.connect();\r\n\t}\r\n\r\n\r\n\r\n\r\n\tprivate reset(): void {\r\n\t\tthis.sessionId = null;\r\n\t\tthis.seq = 0;\r\n\t\tthis.lastACKAt = 0;\r\n\t\tthis._trace = null;\r\n\t\tthis.clearHeartBeat();\r\n\t}\r\n\r\n\r\n\r\n\r\n\tprivate setHeartBeat(): void {\r\n\t\tthis.heartbeatTimeout = setInterval(() => {\r\n\t\t\tif (this.lastACKAt <= Date.now() - (this.heartbeatInterval + 5000)) {\r\n\t\t\t\tthis.client.emit(\"debug\", `Shard ${this.id} has not received a heartbeat ACK in ${this.heartbeatInterval + 5000}ms.`);\r\n\t\t\t\tif (this.reconnect) this._reconnect(true);\r\n\t\t\t\telse this.disconnect();\r\n\t\t\t} else this.heartbeat();\r\n\t\t}, this.heartbeatInterval);\r\n\t}\r\n\r\n\r\n\r\n\r\n\tprivate clearHeartBeat(): void {\r\n\t\tif (this.heartbeatTimeout) clearInterval(this.heartbeatTimeout);\r\n\t\tif (this._initialHeartbeatTimeout) clearTimeout(this._initialHeartbeatTimeout);\r\n\t\tthis.heartbeatTimeout = null;\r\n\t\tthis._initialHeartbeatTimeout = null;\r\n\t\tthis.heartbeatInterval = 0;\r\n\t}\r\n\r\n\tprivate _onHello(): void {\r\n\t\tif (this.sessionId) return void this.resume();\r\n\t\telse this.emit(\"queueIdentify\", this.id);\r\n\t}\r\n\r\n\r\n\r\n\r\n\tpublic async identify(): Promise<void> {\r\n\t\tif (this.betterWs.status !== 1) {\r\n\t\t\tthis.client.emit(\"error\", `Shard ${this.id} was attempting to identify when the ws was not open. Was ${wsStatusTypes[this.betterWs.status]}`);\r\n\t\t\treturn this._reconnect(true);\r\n\t\t}\r\n\t\tthis.client.emit(\"debug\", `Shard ${this.id} is identifying`);\r\n\r\n\t\tthis.status = \"identifying\";\r\n\t\tthis.emit(\"stateChange\", \"identifying\");\r\n\r\n\t\tconst data = {\r\n\t\t\top: OP.IDENTIFY,\r\n\t\t\td: {\r\n\t\t\t\ttoken: this.options.token,\r\n\t\t\t\tproperties: {\r\n\t\t\t\t\tos: process.platform,\r\n\t\t\t\t\tbrowser: \"CloudStorm\",\r\n\t\t\t\t\tdevice: \"CloudStorm\"\r\n\t\t\t\t},\r\n\t\t\t\tlarge_threshold: this.options.largeGuildThreshold,\r\n\t\t\t\tshard: [this.id, this.options.totalShards ?? 1],\r\n\t\t\t\tintents: this.options.intents ? Intents.resolve(this.options.intents) : 0\r\n\t\t\t}\r\n\t\t} as GatewayIdentify;\r\n\r\n\t\tif (this.options.initialPresence) data.d.presence = this._checkPresenceData(this.options.initialPresence);\r\n\t\treturn this.betterWs.sendMessage(data);\r\n\t}\r\n\r\n\r\n\r\n\r\n\tpublic async resume(): Promise<void> {\r\n\t\tif (this.betterWs.status !== 1) {\r\n\t\t\tthis.client.emit(\"error\", `Shard ${this.id} was attempting to resume when the ws was not open. Was ${wsStatusTypes[this.betterWs.status]}`);\r\n\t\t\treturn this._reconnect(true);\r\n\t\t}\r\n\t\tthis.client.emit(\"debug\", `Shard ${this.id} is resuming`);\r\n\r\n\t\tthis.status = \"resuming\";\r\n\t\tthis.emit(\"stateChange\", \"resuming\");\r\n\r\n\t\treturn this.betterWs.sendMessage({\r\n\t\t\top: OP.RESUME,\r\n\t\t\td: { seq: this.seq, token: this.options.token, session_id: this.sessionId! }\r\n\t\t});\r\n\t}\r\n\r\n\r\n\r\n\r\n\tprivate heartbeat(): void {\r\n\t\tif (this.betterWs.status !== 1) {\r\n\t\t\tthis.client.emit(\"error\", `Shard ${this.id} was attempting to heartbeat when the ws was not open. Was ${wsStatusTypes[this.betterWs.status]}`);\r\n\t\t\treturn void this._reconnect(true);\r\n\t\t}\r\n\t\tthis.betterWs.sendMessage({ op: OP.HEARTBEAT, d: this.seq === 0 ? null : this.seq });\r\n\t\tthis.lastHeartbeatSend = Date.now();\r\n\t\tif (this._initialHeartbeatTimeout) {\r\n\t\t\tclearTimeout(this._initialHeartbeatTimeout);\r\n\t\t\tthis._initialHeartbeatTimeout = null;\r\n\t\t}\r\n\t\tif (!this.heartbeatTimeout) this.setHeartBeat();\r\n\t}\r\n\r\n\r\n\r\n\r\n\r\n\tprivate handleDispatch(message: import(\"./Types\").IGatewayDispatch): void {\r\n\t\tthis.client.emit(\"dispatch\", message);\r\n\r\n\t\tif (message.s) {\r\n\t\t\tif (message.s > this.seq + 1) {\r\n\t\t\t\tthis.client.emit(\"debug\", `Shard ${this.id} invalid sequence: { current: ${this.seq} message: ${message.s} }`);\r\n\t\t\t\tthis.seq = message.s;\r\n\t\t\t\tthis.resume();\r\n\t\t\t}\r\n\t\t\tthis.seq = message.s;\r\n\t\t}\r\n\t\tswitch (message.t) {\r\n\t\tcase \"READY\":\r\n\t\tcase \"RESUMED\":\r\n\t\t\tif (message.t === \"READY\") {\r\n\t\t\t\tif (message.d.resume_gateway_url) this.resumeAddress = `${message.d.resume_gateway_url}?v=${GATEWAY_VERSION}&encoding=${this.options.ws?.encoding === \"etf\" ? \"etf\" : \"json\"}${this.options.ws?.compress ? \"&compress=zlib-stream\" : \"\"}`;\r\n\t\t\t\tthis.sessionId = message.d.session_id;\r\n\t\t\t}\r\n\t\t\tthis.status = \"ready\";\r\n\t\t\tthis.emit(\"stateChange\", \"ready\");\r\n\t\t\tthis._trace = (message.d as unknown as { _trace: string })._trace;\r\n\t\t\tthis.emit(\"ready\", message.t === \"RESUMED\");\r\n\t\t\tbreak;\r\n\t\tdefault:\r\n\t\t\tvoid 0;\r\n\t\t}\r\n\t}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\tprivate handleWsClose(code: number, reason: string): void {\r\n\t\tlet gracefulClose = false;\r\n\t\tthis.status = \"disconnected\";\r\n\t\tthis.emit(\"stateChange\", \"disconnected\");\r\n\t\tthis.clearHeartBeat();\r\n\r\n\t\tconst isManualClose = code === 1000 && this._closing;\r\n\r\n\t\tconst message = disconnectMessages[code as keyof typeof disconnectMessages];\r\n\t\tconst isRecoverable = resumableCodes.includes(code);\r\n\t\tconst shouldntReconnect = shouldntAttemptReconnectCodes.includes(code) || isManualClose;\r\n\r\n\t\tif (isRecoverable && this.resumeAddress) this.betterWs.address = this.resumeAddress;\r\n\t\telse this.betterWs.address = this.identifyAddress;\r\n\r\n\t\tif (message) this.client.emit(\"error\", message);\r\n\r\n\t\tif (isManualClose || this.reconnecting) gracefulClose = true;\r\n\r\n\t\tthis._closing = false;\r\n\r\n\t\tthis.emit(\"disconnect\", code, reason, gracefulClose);\r\n\r\n\t\tif (!shouldntReconnect && this.reconnect) this.connect();\r\n\t}\r\n\r\n\r\n\r\n\r\n\r\n\tpublic async presenceUpdate(data: Partial<GatewayPresenceUpdateData>): Promise<void> {\r\n\t\treturn this.betterWs.sendMessage({ op: OP.PRESENCE_UPDATE, d: this._checkPresenceData(data) });\r\n\t}\r\n\r\n\r\n\r\n\r\n\r\n\tpublic async voiceStateUpdate(data: GatewayVoiceStateUpdateData & { self_deaf?: boolean; self_mute?: boolean; }): Promise<void> {\r\n\t\tif (!data) return Promise.resolve();\r\n\t\treturn this.betterWs.sendMessage({ op: OP.VOICE_STATE_UPDATE, d: this._checkVoiceStateUpdateData(data) });\r\n\t}\r\n\r\n\r\n\r\n\r\n\r\n\tpublic async requestGuildMembers(data: GatewayRequestGuildMembersData & { limit?: number; }): Promise<void> {\r\n\t\treturn this.betterWs.sendMessage({ op: OP.REQUEST_GUILD_MEMBERS, d: this._checkRequestGuildMembersData(data) });\r\n\t}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\tprivate _checkPresenceData(data: Parameters<DiscordConnector[\"presenceUpdate\"]>[\"0\"]): GatewayPresenceUpdateData {\r\n\t\tdata.status = data.status ?? PresenceUpdateStatus.Online;\r\n\t\tdata.activities = data.activities && Array.isArray(data.activities) ? data.activities : [];\r\n\r\n\t\tif (data.activities) {\r\n\t\t\tfor (const activity of data.activities) {\r\n\t\t\t\tconst index = data.activities.indexOf(activity);\r\n\t\t\t\tif (activity.type === undefined) activity.type = activity.url ? 1 : 0;\r\n\t\t\t\tif (!activity.name) {\r\n\t\t\t\t\tif (activity.state && activity.type === 4) activity.name = \"Custom Status\";\r\n\t\t\t\t\telse data.activities.splice(index, 1);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tdata.afk = data.afk ?? false;\r\n\t\tdata.since = data.since ?? Date.now();\r\n\t\treturn data as GatewayPresenceUpdateData;\r\n\t}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\tprivate _checkVoiceStateUpdateData(data: Parameters<DiscordConnector[\"voiceStateUpdate\"]>[\"0\"]): GatewayVoiceStateUpdateData {\r\n\t\tdata.channel_id = data.channel_id ?? null;\r\n\t\tdata.self_mute = data.self_mute ?? false;\r\n\t\tdata.self_deaf = data.self_deaf ?? false;\r\n\t\treturn data;\r\n\t}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\tprivate _checkRequestGuildMembersData(data: Parameters<DiscordConnector[\"requestGuildMembers\"]>[\"0\"]): GatewayRequestGuildMembersData {\r\n\t\tconst withQuery = data as GatewayRequestGuildMembersDataWithQuery;\r\n\t\tconst withUserIDs = data as GatewayRequestGuildMembersDataWithUserIds;\r\n\t\tif (!withQuery.query && !withUserIDs.user_ids) withQuery.query = \"\";\r\n\t\tif (withQuery.query && withUserIDs.user_ids) delete (data as { query?: string; }).query;\r\n\t\tdata.limit = data.limit ?? 10;\r\n\t\treturn data;\r\n\t}\r\n}\r\n\r\nexport = DiscordConnector;\r\n","\"use strict\";\r\n\r\nimport { EventEmitter } from \"events\";\r\nimport DC = require(\"./DiscordConnector\");\r\n\r\ninterface ShardEvents {\r\n\tdisconnect: [number, string, boolean];\r\n\tready: [boolean];\r\n\tqueueIdentify: [number];\r\n}\r\n\r\ninterface Shard {\r\n\taddListener<E extends keyof ShardEvents>(event: E, listener: (...args: ShardEvents[E]) => any): this;\r\n\temit<E extends keyof ShardEvents>(event: E, ...args: ShardEvents[E]): boolean;\r\n\teventNames(): Array<keyof ShardEvents>;\r\n\tlistenerCount(event: keyof ShardEvents): number;\r\n\tlisteners(event: keyof ShardEvents): Array<(...args: Array<any>) => any>;\r\n\toff<E extends keyof ShardEvents>(event: E, listener: (...args: ShardEvents[E]) => any): this;\r\n\ton<E extends keyof ShardEvents>(event: E, listener: (...args: ShardEvents[E]) => any): this;\r\n\tonce<E extends keyof ShardEvents>(event: E, listener: (...args: ShardEvents[E]) => any): this;\r\n\tprependListener<E extends keyof ShardEvents>(event: E, listener: (...args: ShardEvents[E]) => any): this;\r\n\tprependOnceListener<E extends keyof ShardEvents>(event: E, listener: (...args: ShardEvents[E]) => any): this;\r\n\trawListeners(event: keyof ShardEvents): Array<(...args: Array<any>) => any>;\r\n\tremoveAllListeners(event?: keyof ShardEvents): this;\r\n\tremoveListener<E extends keyof ShardEvents>(event: E, listener: (...args: ShardEvents[E]) => any): this;\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\nclass Shard extends EventEmitter {\r\n\r\n\tpublic ready = false;\r\n\r\n\tpublic connector: DC;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\tpublic constructor(public id: number, public client: EventEmitter & { options: Omit<import(\"./Types\").IClientOptions, \"snowtransferInstance\"> & { token: string; endpoint?: string; } }) {\r\n\t\tsuper();\r\n\r\n\t\tthis.connector = new DC(id, client);\r\n\t\tthis.connector.on(\"disconnect\", (...args) => {\r\n\t\t\tthis.ready = false;\r\n\t\t\tthis.emit(\"disconnect\", ...args);\r\n\t\t});\r\n\t\tthis.connector.on(\"ready\", resume => this.emit(\"ready\", resume));\r\n\t\tthis.connector.on(\"queueIdentify\", () => this.emit(\"queueIdentify\", this.id));\r\n\t}\r\n\r\n\r\n\r\n\r\n\tpublic get latency(): number {\r\n\t\treturn this.connector.latency;\r\n\t}\r\n\r\n\r\n\r\n\r\n\tpublic connect(): void {\r\n\t\tthis.connector.connect();\r\n\t}\r\n\r\n\r\n\r\n\r\n\tpublic disconnect(): Promise<void> {\r\n\t\treturn this.connector.disconnect();\r\n\t}\r\n\r\n\r\n\r\n\r\n\r\n\tpublic presenceUpdate(data: Parameters<Shard[\"connector\"][\"presenceUpdate\"]>[\"0\"]): Promise<void> {\r\n\t\treturn this.connector.presenceUpdate(data);\r\n\t}\r\n\r\n\r\n\r\n\r\n\r\n\tpublic voiceStateUpdate(data: Parameters<Shard[\"connector\"][\"voiceStateUpdate\"]>[\"0\"]): Promise<void> {\r\n\t\treturn this.connector.voiceStateUpdate(data);\r\n\t}\r\n\r\n\r\n\r\n\r\n\r\n\tpublic requestGuildMembers(data: Parameters<Shard[\"connector\"][\"requestGuildMembers\"]>[\"0\"]): Promise<void> {\r\n\t\treturn this.connector.requestGuildMembers(data);\r\n\t}\r\n}\r\n\r\nexport = Shard;\r\n","\"use strict\";\r\n\r\nimport Shard = require(\"./Shard\");\r\nimport { LocalBucket } from \"snowtransfer\";\r\n\r\n\r\n\r\n\r\n\r\n\r\nclass ShardManager {\r\n\r\n\tpublic options: ShardManager[\"client\"][\"options\"];\r\n\r\n\tpublic shards: { [id: number]: Shard } = {};\r\n\r\n\tpublic identifyBucket = new LocalBucket(1000, 1000 * 60 * 60 * 24);\r\n\r\n\tpublic concurrencyBucket: LocalBucket | null = null;\r\n\r\n\r\n\r\n\r\n\tpublic constructor(public client: import(\"events\").EventEmitter & { options: Omit<import(\"./Types\").IClientOptions, \"snowtransferInstance\"> & { token: string; endpoint?: string; } }) {\r\n\t\tthis.options = client.options;\r\n\t}\r\n\r\n\r\n\r\n\r\n\tpublic spawn(): void {\r\n\t\tif (!this.concurrencyBucket) throw new Error(\"Trying to spawn shards without calling Client.connect()\");\r\n\t\tfor (const id of (this.options.shards === \"auto\" ? Array(this.options.totalShards).fill(0).map((_, index) => index) : this.options.shards ?? [0])) {\r\n\t\t\tthis.client.emit(\"debug\", `Spawned shard ${id}`);\r\n\t\t\tthis.shards[id] = new Shard(id, this.client);\r\n\t\t\tthis._addListener(this.shards[id]);\r\n\t\t\tthis.shards[id].connector.connect();\r\n\t\t}\r\n\t}\r\n\r\n\r\n\r\n\r\n\tpublic disconnect(): void {\r\n\t\tfor (const shardKey in this.shards) {\r\n\t\t\tthis.shards[shardKey].disconnect();\r\n\t\t}\r\n\t}\r\n\r\n\r\n\r\n\r\n\r\n\tprivate _addListener(shard: Shard): void {\r\n\t\tshard.on(\"ready\", (resume) => {\r\n\t\t\tshard.ready = true;\r\n\t\t\tthis.client.emit(\"debug\", `Shard ${shard.id} ${resume ? \"has resumed\" : \"is ready\"}`);\r\n\t\t\tthis.client.emit(\"shardReady\", { id: shard.id, ready: !resume });\r\n\t\t\tthis._checkReady();\r\n\t\t});\r\n\t\tshard.on(\"queueIdentify\", (shardId) => {\r\n\t\t\tif (!this.shards[shardId]) return this.client.emit(\"debug\", `Received a queueIdentify event for shard ${shardId} but it does not exist. Was it removed?`);\r\n\t\t\tthis.client.emit(\"debug\", `Shard ${shardId} is ready to identify`);\r\n\t\t\tif (shard.connector.reconnecting) return shard.connector.resume();\r\n\t\t\tthis.concurrencyBucket?.queue(() => {\r\n\t\t\t\tthis.identifyBucket.queue(() => this.shards[shardId].connector.identify());\r\n\t\t\t});\r\n\t\t});\r\n\t\tshard.on(\"disconnect\", (code, reason, gracefulClose) => {\r\n\t\t\tthis.client.emit(\"debug\", `Websocket of shard ${shard.id} closed with code ${code} and reason: ${reason ?? \"None\"}`);\r\n\t\t\tif (code === 1000 && gracefulClose) return this._checkDisconnect();\r\n\t\t});\r\n\t}\r\n\r\n\r\n\r\n\r\n\tprivate _checkReady(): void {\r\n\t\tfor (const shardId in this.shards) {\r\n\t\t\tif (this.shards[shardId]) {\r\n\t\t\t\tif (!this.shards[shardId].ready) return;\r\n\t\t\t}\r\n\t\t}\r\n\t\tthis.client.emit(\"ready\");\r\n\t}\r\n\r\n\r\n\r\n\r\n\tprivate _checkDisconnect(): void {\r\n\t\tfor (const shardId in this.shards) {\r\n\t\t\tif (this.shards[shardId]) {\r\n\t\t\t\tif (this.shards[shardId].connector.status !== \"disconnected\") return;\r\n\t\t\t}\r\n\t\t}\r\n\t\tthis.client.emit(\"disconnected\");\r\n\t}\r\n\r\n\r\n\r\n\r\n\r\n\tpublic async presenceUpdate(data: Parameters<Shard[\"presenceUpdate\"]>[\"0\"]): Promise<void> {\r\n\t\tfor (const shardKey in this.shards) {\r\n\t\t\tif (this.shards[shardKey]) {\r\n\t\t\t\tconst shard = this.shards[shardKey];\r\n\t\t\t\tthis.shardPresenceUpdate(shard.id, data);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\tpublic shardPresenceUpdate(shardId: number, data: Parameters<Shard[\"presenceUpdate\"]>[\"0\"]): Promise<void> {\r\n\t\treturn new Promise((res, rej) => {\r\n\t\t\tconst shard = this.shards[shardId];\r\n\t\t\tif (!shard) rej(new Error(`Shard ${shardId} does not exist`));\r\n\t\t\tif (!shard.ready) return;\r\n\t\t\tshard.presenceUpdate(data).then(result => res(result)).catch(e => rej(e));\r\n\t\t});\r\n\t}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\tpublic voiceStateUpdate(shardId: number, data: Parameters<Shard[\"voiceStateUpdate\"]>[\"0\"]): Promise<void> {\r\n\t\treturn new Promise((res, rej) => {\r\n\t\t\tconst shard = this.shards[shardId];\r\n\t\t\tif (!shard) rej(new Error(`Shard ${shardId} does not exist`));\r\n\t\t\tif (!shard.ready) return;\r\n\t\t\tshard.voiceStateUpdate(data).then(result => res(result)).catch(e => rej(e));\r\n\t\t});\r\n\t}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\tpublic requestGuildMembers(shardId: number, data: Parameters<Shard[\"requestGuildMembers\"]>[\"0\"]): Promise<void> {\r\n\t\treturn new Promise((res, rej) => {\r\n\t\t\tconst shard = this.shards[shardId];\r\n\t\t\tif (!shard) rej(new Error(`Shard ${shardId} does not exist`));\r\n\t\t\tif (!shard.ready) return;\r\n\t\t\tshard.requestGuildMembers(data).then(result => res(result)).catch(e => rej(e));\r\n\t\t});\r\n\t}\r\n}\r\n\r\nexport = ShardManager;\r\n","\"use strict\";\r\n\r\nimport fs = require(\"fs\");\r\nimport path = require(\"path\");\r\n\r\nconst version = JSON.parse(fs.readFileSync(path.join(__dirname, \"../package.json\"), { encoding: \"utf8\" })).version as string;\r\nimport { EventEmitter } from \"events\";\r\nimport Constants = require(\"./Constants\");\r\nimport { SnowTransfer, LocalBucket } from \"snowtransfer\";\r\nimport ShardManager = require(\"./ShardManager\");\r\nimport type {\r\n\tGatewaySendPayload,\r\n\tGatewayReceivePayload,\r\n\tAPIGatewayBotInfo\r\n} from \"discord-api-types/v10\";\r\n\r\ninterface ClientEvents {\r\n\tdebug: [string];\r\n\trawSend: [GatewaySendPayload];\r\n\trawReceive: [GatewayReceivePayload];\r\n\terror: [string];\r\n\r\n\tevent: [import(\"./Types\").IGatewayMessage];\r\n\tdispatch: [import(\"./Types\").IGatewayDispatch];\r\n\tshardReady: [{ id: number; ready: boolean; }];\r\n\tready: [];\r\n\tdisconnected: [];\r\n}\r\n\r\ninterface Client {\r\n\taddListener<E extends keyof ClientEvents>(event: E, listener: (...args: ClientEvents[E]) => any): this;\r\n\temit<E extends keyof ClientEvents>(event: E, ...args: ClientEvents[E]): boolean;\r\n\teventNames(): Array<keyof ClientEvents>;\r\n\tlistenerCount(event: keyof ClientEvents): number;\r\n\tlisteners(event: keyof ClientEvents): Array<(...args: Array<any>) => any>;\r\n\toff<E extends keyof ClientEvents>(event: E, listener: (...args: ClientEvents[E]) => any): this;\r\n\ton<E extends keyof ClientEvents>(event: E, listener: (...args: ClientEvents[E]) => any): this;\r\n\tonce<E extends keyof ClientEvents>(event: E, listener: (...args: ClientEvents[E]) => any): this;\r\n\tprependListener<E extends keyof ClientEvents>(event: E, listener: (...args: ClientEvents[E]) => any): this;\r\n\tprependOnceListener<E extends keyof ClientEvents>(event: E, listener: (...args: ClientEvents[E]) => any): this;\r\n\trawListeners(event: keyof ClientEvents): Array<(...args: Array<any>) => any>;\r\n\tremoveAllListeners(event?: keyof ClientEvents): this;\r\n\tremoveListener<E extends keyof ClientEvents>(event: E, listener: (...args: ClientEvents[E]) => any): this;\r\n}\r\n\r\n\r\n\r\n\r\nclass Client extends EventEmitter {\r\n\r\n\tpublic token: string;\r\n\r\n\tpublic options: Omit<import(\"./Types\").IClientOptions, \"snowtransferInstance\"> & { token: string; endpoint?: string; };\r\n\r\n\tpublic shardManager: ShardManager;\r\n\r\n\tpublic version = version;\r\n\r\n\tprivate _restClient: SnowTransfer;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\tpublic constructor(token: string, options: import(\"./Types\").IClientOptions = {}) {\r\n\t\tsuper();\r\n\t\tif (!token) throw new Error(\"Missing token!\");\r\n\t\tthis.options = {\r\n\t\t\tlargeGuildThreshold: 250,\r\n\t\t\tshards: \"auto\",\r\n\t\t\treconnect: true,\r\n\t\t\tintents: 0,\r\n\t\t\ttoken: \"\",\r\n\t\t\tws: {\r\n\t\t\t\tcompress: true,\r\n\t\t\t\tencoding: \"json\"\r\n\t\t\t}\r\n\t\t};\r\n\t\tthis._restClient = options.snowtransferInstance ? options.snowtransferInstance : new SnowTransfer(token);\r\n\t\tdelete options.snowtransferInstance;\r\n\t\tthis.token = token.startsWith(\"Bot \") ? token.substring(4) : token;\r\n\t\tObject.assign(this.options, options);\r\n\t\tthis.options.token = token;\r\n\t\tthis.shardManager = new ShardManager(this);\r\n\t}\r\n\r\n\r\n\r\n\r\n\r\n\tpublic async connect(): Promise<void> {\r\n\t\tconst initial = await this.fetchConnectInfo();\r\n\t\tif (this.options.shards === \"auto\") this.options.totalShards = initial;\r\n\t\tthis.shardManager.spawn();\r\n\t}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\tpublic async fetchConnectInfo(): Promise<number> {\r\n\t\tconst gateway = await this.getGatewayBot();\r\n\t\tthis._updateEndpoint(gateway.url);\r\n\t\tconst oldQueueConcurrency = [] as Array<() => unknown>;\r\n\t\tconst oldQueueIdentify = [] as Array<() => unknown>;\r\n\t\tif (this.shardManager.concurrencyBucket?.fnQueue.length) {\r\n\t\t\toldQueueConcurrency.push(...this.shardManager.concurrencyBucket.fnQueue);\r\n\t\t\tthis.shardManager.concurrencyBucket.dropQueue();\r\n\t\t}\r\n\t\tif (this.shardManager.identifyBucket.fnQueue.length) oldQueueIdentify.push(...this.shardManager.identifyBucket.fnQueue);\r\n\t\tthis.shardManager.identifyBucket.dropQueue();\r\n\t\tthis.shardManager.concurrencyBucket = new LocalBucket(gateway.session_start_limit.max_concurrency, 5000);\r\n\t\tthis.shardManager.identifyBucket.remaining = gateway.session_start_limit.remaining;\r\n\t\tthis.shardManager.identifyBucket.reset = gateway.session_start_limit.reset_after;\r\n\t\tfor (const fn of oldQueueConcurrency) {\r\n\t\t\tthis.shardManager.concurrencyBucket.queue(fn);\r\n\t\t}\r\n\t\tfor (const fn of oldQueueIdentify) {\r\n\t\t\tthis.shardManager.identifyBucket.queue(fn);\r\n\t\t}\r\n\t\treturn gateway.shards;\r\n\t}\r\n\r\n\r\n\r\n\r\n\r\n\tpublic async getGateway(): Promise<string> {\r\n\t\tconst gatewayData = await this._restClient.bot.getGateway();\r\n\t\treturn gatewayData.url;\r\n\t}\r\n\r\n\r\n\r\n\r\n\r\n\tpublic async getGatewayBot(): Promise<APIGatewayBotInfo> {\r\n\t\treturn this._restClient.bot.getGatewayBot();\r\n\t}\r\n\r\n\r\n\r\n\r\n\r\n\tpublic disconnect(): void {\r\n\t\treturn this.shardManager.disconnect();\r\n\t}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\tpublic async presenceUpdate(data: Parameters<Client[\"shardManager\"][\"presenceUpdate\"]>[\"0\"]): Promise<void> {\r\n\t\treturn this.shardManager.presenceUpdate(data);\r\n\t}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\tpublic shardStatusUpdate(shardId: number, data: Parameters<Client[\"shardManager\"][\"shardPresenceUpdate\"]>[\"1\"]): Promise<void> {\r\n\t\treturn this.shardManager.shardPresenceUpdate(shardId, data);\r\n\t}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\tpublic voiceStateUpdate(shardId: number, data: Parameters<Client[\"shardManager\"][\"voiceStateUpdate\"]>[\"1\"]): Promise<void> {\r\n\t\treturn this.shardManager.voiceStateUpdate(shardId, data);\r\n\t}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\tpublic requestGuildMembers(shardId: number, data: Parameters<Client[\"shardManager\"][\"requestGuildMembers\"]>[\"1\"]): Promise<void> {\r\n\t\tif (!data.guild_id) throw new Error(\"You need to pass a guild_id\");\r\n\t\treturn this.shardManager.requestGuildMembers(shardId, data);\r\n\t}\r\n\r\n\r\n\r\n\r\n\r\n\tprivate _updateEndpoint(gatewayUrl: string): void {\r\n\t\tthis.options.endpoint = `${gatewayUrl}?v=${Constants.GATEWAY_VERSION}&encoding=${this.options.ws?.encoding === \"etf\" ? \"etf\" : \"json\"}${this.options.ws?.compress ? \"&compress=zlib-stream\" : \"\"}`;\r\n\t}\r\n}\r\n\r\nexport = Client;\r\n","import Client2 = require(\"./Client\");\r\nimport Constants = require(\"./Constants\");\r\nimport Intents = require(\"./Intents\");\r\n\r\nimport Shard2 = require(\"./Shard\");\r\nimport ShardManager2 = require(\"./ShardManager\");\r\n\r\nimport BetterWs2 = require(\"./BetterWs\");\r\n\r\nexport { BetterWs2 as BetterWs, Client2 as Client, Constants, Intents, Shard2 as Shard, ShardManager2 as ShardManager };\r\nexport * from \"./Types\";\r\n"]}